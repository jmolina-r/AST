digraph G {
	 2[label= " var_declaration01 int aNumber1" ]
	1 -> 2
	3[label= " var_declaration01 int aNumber2" ]
	1 -> 3
	4[label= " var_declaration02 int anArray [123]" ]
	1 -> 4
	5[label= " var_declaration01 void aVariable" ]
	1 -> 5
	6[label= " var_declaration02 void anotherArray [234]" ]
	1 -> 6
	7[label= "Funcion: void aProcedure1"]
	1 -> 7
	8[label= "Funcion: void aProcedure2"]
	10[label="e" ]
	9 -> 10
	9[label= compound_stmt]
	8 -> 9
	1 -> 8
	11[label= "Funcion: int aProcedure3"]
	13[label="e" ]
	12 -> 13
	14[label="e" ]
	12 -> 14
	15[label="e" ]
	12 -> 15
	16[label="e" ]
	12 -> 16
	17[label="e" ]
	12 -> 17
	12[label= compound_stmt]
	11 -> 12
	1 -> 11
	19[label= " parametro:  int aNum1"]
	18[label= "Funcion: int aProcedure4"]
	18 -> 19
	20[label= " parametro:  void aNum2"]
	18[label= "Funcion: int aProcedure4"]
	18 -> 20
	21[label= " parametro:  int anArray1[]"]
	18[label= "Funcion: int aProcedure4"]
	18 -> 21
	22[label= " parametro:  void anArray2[]"]
	18[label= "Funcion: int aProcedure4"]
	18 -> 22
	24[label= " var_declaration01 int aNum3" ]
	23 -> 24
	25[label= " var_declaration02 int anArray3 [456]" ]
	23 -> 25
	26[label= " var_declaration01 void aNum4" ]
	23 -> 26
	27[label= " var_declaration02 void anArray4 [78]" ]
	23 -> 27
	28[label= " var_declaration01 int aNum5" ]
	23 -> 28
	31[label= "var: aNum3"]
	32[label= "var: aNum1"]
	30[label= " ASSIGN" ]
	30 -> 31
	30 -> 32
	29 -> 30
	29[label= Expresion]
	23 -> 29
	35[label= "var: aNum2"]
	37[label= "var: aNum3"]
	38[label= 1]
	36[label= " BinOP + " ]
	36 -> 37
	36 -> 38
	34[label= " ASSIGN" ]
	34 -> 35
	34 -> 36
	33 -> 34
	33[label= Expresion]
	23 -> 33
	41[label= "var: anArray3"]
	42[label= 0]
	41 -> 42
	43[label= "var: anArray1"]
	44[label= 2]
	43 -> 44
	40[label= " ASSIGN" ]
	40 -> 41
	40 -> 43
	39 -> 40
	39[label= Expresion]
	23 -> 39
	47[label= "var: anArray2"]
	48[label= 3]
	47 -> 48
	49[label= "var: anarray3"]
	50[label= 4]
	49 -> 50
	46[label= " ASSIGN" ]
	46 -> 47
	46 -> 49
	45 -> 46
	45[label= Expresion]
	23 -> 45
	51[label="e" ]
	23 -> 51
	52[label="e" ]
	23 -> 52
	55[label= "var: aNum3"]
	56[label= "var: aNum4"]
	54[label= " binop > " ]
	54 -> 55
	54 -> 56
	57[label="e" ]
	53[label= "WHILE: "]
	53 -> 54
	53 -> 57
	23 -> 53
	61[label= "var: aNum3"]
	62[label= 2]
	60[label= " BinOP + " ]
	60 -> 61
	60 -> 62
	64[label= 3]
	65[label= "var: aNum5"]
	63[label= " BinOp / " ]
	63 -> 64
	63 -> 65
	59[label= " binop >= " ]
	59 -> 60
	59 -> 63
	67[label= RETURN]
	66 -> 67
	66[label= compound_stmt]
	58[label= "WHILE: "]
	58 -> 59
	58 -> 66
	23 -> 58
	69[label= 23]
	70[label="e" ]
	68[label= "IF"]
	68 -> 69
	68 -> 70
	23 -> 68
	72[label= "var: aNum5"]
	73[label="e" ]
	74[label="e" ]
	71[label= "IF-ELSE"]
	71 -> 72
	71 -> 73
	71 -> 74
	23 -> 71
	79[label= 5]
	80[label= "var: aNum5"]
	78[label= " BinOp / " ]
	78 -> 79
	78 -> 80
	81[label= 4]
	77[label= " BinOP - " ]
	77 -> 78
	77 -> 81
	83[label= "var: aNum3"]
	85[label= 2]
	88[label= "var: aNum5"]
	89[label= 3]
	87[label= " BinOp / " ]
	87 -> 88
	87 -> 89
	90[label= 7]
	86[label= " BinOP - " ]
	86 -> 87
	86 -> 90
	84[label= " BinOp / " ]
	84 -> 85
	84 -> 86
	82[label= " BinOP + " ]
	82 -> 83
	82 -> 84
	76[label= " binop <= " ]
	76 -> 77
	76 -> 82
	93[label= "var: aNum5"]
	95[label= 3]
	96[label= "var: aNum5"]
	94[label= " BinOp / " ]
	94 -> 95
	94 -> 96
	92[label= " ASSIGN" ]
	92 -> 93
	92 -> 94
	91 -> 92
	91[label= Expresion]
	75[label= "IF"]
	75 -> 76
	75 -> 91
	23 -> 75
	100[label= "var: aNum5"]
	101[label= "var: aNum3"]
	99[label= " BinOP - " ]
	99 -> 100
	99 -> 101
	104[label= "var: aNum5"]
	105[label= 3]
	103[label= " BinOp / " ]
	103 -> 104
	103 -> 105
	107[label= 4]
	108[label= "var: aNum3"]
	106[label= " BinOp / " ]
	106 -> 107
	106 -> 108
	102[label= " BinOP + " ]
	102 -> 103
	102 -> 106
	98[label= " BinOp / " ]
	98 -> 99
	98 -> 102
	112[label= "var: aNum3"]
	111[label= "call: output"]
	111 -> 112
	110 -> 111
	110[label= Expresion]
	109 -> 110
	109[label= compound_stmt]
	116[label= "var: aNum4"]
	115[label= " ASSIGN" ]
	115 -> 116
	115 -> 117
	114 -> 115
	114[label= Expresion]
	113 -> 114
	119[label= "var: aNum3"]
	118 -> 119
	118[label= RETURN]
	113 -> 118
	113[label= compound_stmt]
	97[label= "IF-ELSE"]
	97 -> 98
	97 -> 109
	97 -> 113
	23 -> 97
	122[label= 5]
	123[label= 0]
	121[label= " BinOp / " ]
	121 -> 122
	121 -> 123
	120 -> 121
	120[label= RETURN]
	23 -> 120
	23[label= compound_stmt]
	18 -> 23
	1 -> 18
	124[label= "Funcion: void main"]
	126 -> 127
	126[label= Expresion]
	125 -> 126
	125[label= compound_stmt]
	124 -> 125
	1 -> 124
	1[label= program]
	}